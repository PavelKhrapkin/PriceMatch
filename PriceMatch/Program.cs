/* ----------------------------------------------------------------------------
 * Exercise PriceMatch 16.02.2017 Pavel Khrapkin
 * 
 * Модель концепции пакета Price, содержащая значительное количество модулей.
 * Задача этого упражнения - отработать архитектуру, исходящую из трех основных
 * классов 
 *          1. Спецификации покупателя товаров  - Quotation
 *          2. Диспетчера, подбирающего для 
 *             спецификации подходящие товары   - Matcher
 *          3. Поставщиков, предлагающих разные
 *             товары со своими прайс-листами   - Suppliers
 * 
 * Все остальные модули- классы играют вспомогательную роль. Так например, класс
 * Product - товар - который используют все три класса выше. Если/когда Matcher
 * подбирает подходящий к спецификации товар, он подставляет в Quotation его 
 * цену (price) и ссылку, однозначно указывающую на соответствующее место в 
 * прайс-листе. 
 * 
 * Модуль Bootstrap (Boot) при загрузке инициализирует все вспомогательные 
 * модули и считывает нужные публичные данные, в т.ч. прайс-листы поставщиков.
 * 
 * Exercise/PriceResx сделан 16.2.2018 из PriceXLS как простое консольное
 * приложение, то есть без WPF интерфейса с пользователем, но со всеми нужными
 * Unit Test-ами
 */

using System;

namespace PriceMatch
{
    class Program
    {
        static void Main(string[] args)
        {
            Boot boot = new Boot();

            Quotation quot = new Quotation(boot);
            Matcher matches = new Matcher(boot, quot);
            Output(quot, matches);
        }

        static void Output(Quotation quote, Matcher matches)
        {
            throw new NotImplementedException();
        }
    }
}